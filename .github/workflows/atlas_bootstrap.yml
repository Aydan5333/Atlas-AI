name: Atlas bootstrap
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  scaffold:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Create Atlas scaffold
        run: |
          mkdir -p app
          printf "# Atlas package init\n" > app/__init__.py
          cat > app/config.py <<'PY'
          import os
          def _need(name: str) -> str:
              v = os.getenv(name)
              if not v:
                  raise RuntimeError(f"Missing env var: {name}")
              return v
          SUPABASE_URL = _need("SUPABASE_URL")
          SUPABASE_ANON_KEY = _need("SUPABASE_ANON_KEY")
          OPENAI_API_KEY = os.getenv("OPENAI_API_KEY", "")
          PY
          printf "def hello(name: str = 'D'):\n    return f'Atlas online. Ready to work, {name}.'\n" > app/atlas.py
          printf "from app.atlas import hello\n\nif __name__ == '__main__':\n    print(hello())\n" > app/cli.py
          cat > requirements.txt <<'TXT'
          supabase
          python-dotenv
          openai
          TXT
          cat > .env.example <<'ENV'
          SUPABASE_URL=https://YOUR-PROJECT.supabase.co
          SUPABASE_ANON_KEY=ey...
          OPENAI_API_KEY=sk-...
          ENV

      - name: Commit & push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: scaffold Atlas app structure"
